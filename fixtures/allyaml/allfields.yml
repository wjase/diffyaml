swagger: "2.0"
info:
  title: Swagger Sample App
  description: This is a sample server Petstore server.
  termsOfService: http://swagger.io/terms/
  contact:
    name: API Support
    url: http://www.swagger.io/support
    email: support@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.1
host: petstore.swagger.wordnik.com
basePath: /api
schemes:
  - http
consumes:
  - application/json
produces:
  - application/xml
paths:
  /a/:
    get:
      tags:
      - pet
      summary: Updates a pet in the store with form data
      description: ""
      operationId: updatePetWithForm
      consumes:
      - application/x-www-form-urlencoded
      produces:
      - application/json
      - application/xml
      parameters:
        - name: limit
          in: query
          required: false
          type: integer
        - name: headerParam
          in: header
          schema:
            type: string
            format: password
        - name: deletedHeaderParam
          in: header
          schema:
            type: string
            format: password
        - name: changeMaxInt
          in: query
          required: false
          type: integer
          maximum: 200
          exclusiveMaximum: false
        - name: removeMaxInt
          in: query
          required: false
          type: integer
          maximum: 200
          exclusiveMaximum: true
        - name: changeMinInt
          in: query
          required: false
          type: integer
          minimum: 200
          exclusiveMinimum: false
        - name: wideryString
          in: query
          required: false
          type: integer
        - name: personality
          in: query
          required: false
          type: string
          enum:
            - crazy
            - empathic
            - saucy
        - name: changeyPattern
          in: query
          required: false
          type: string
          pattern: '*'
        - name: primToObj
          in: query
          required: false
          type: integer
        - name: ObjToPrim
          in: query
          required: false
          schema:
            $ref: '#/definitions/A2'
            name: token
        - name: randomThings    
          in: header
          description: token to be passed as a header
          required: true
          type: array
          items:
            type: integer
            format: int64
          collectionFormat: csv
      responses:
        "200":
          description: 200 response
          headers:
            - header1:
                type: integer
          schema:
            type: array
            items:
              $ref: '#/definitions/A1'
    post:
      parameters:
        - name: ""
          in: body
          schema:
            $ref: '#/definitions/A2'
      responses:
        "200":
          description: 200 response
          schema:
            $ref: '#/definitions/A3'
  /a/{id}:
    get:
      parameters:
        - name: flavour
          required: false
          in: query
          type: string
        - name: id
          in: path
          type: string
      responses:
        "200":
          description: 200 response
          schema:
            type: array
            items:
              $ref: '#/definitions/A1'
    post:
      parameters:
        - name: ""
          in: body
          schema:
            $ref: '#/definitions/A2'
      responses:
        "200":
          description: 200 response - OK
          schema:
            $ref: '#/definitions/A3'
        "410":
          description: 410 repsponse
          schema:
            $ref: '#/definitions/ExtendedErrorModel'
  /b/:
    get:
      parameters:
        - name: limit
          in: query
          required: false
          type: integer
      responses:
        "200":
          description: 200 response
          schema:
            type: array
            items:
              $ref: '#/definitions/A1'
    post:
      parameters:
        - name: ""
          in: body
          schema:
            $ref: '#/definitions/A2'
      responses:
        "200":
          description: 200 response
          schema:
            $ref: '#/definitions/A3'
      security:
      - petstore_auth:
        - write:pets
        - read:pets
  /c/:
    get:
      responses:
        "200":
          description: 200 response
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  type: integer
                  minItems: 1
                  maxItems: 5
                  uniqueItems: true
                  maxLength: 10
                  minLength: 1
                astring:
                  type: string
                  enum: [value1, value2]
                apatstring:
                  type: string
                  pattern: .*
              required:
              - id
              - astring      
definitions:
  A1:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
      personality:
        type: string
        enum:
          - crazy
          - empathic
          - saucy
      busby:
        type: string
      onceWasArray:
        type: array
        items:
          type: object
      sameWideness:
        type: number
  A2:
    type: object
    required:
      - name
      - description
    properties:
      name:
        type: string
      description:
        type: string
  A3:
    type: object
    required:
      - name
    properties:
      id:
        type: integer
      name:
        type: string
      description:
        type: string
      letters:
        type: array
        items:
          type: string
      attributes:
        type: object
    additionalProperties:
      anextraone:
        type: string
  # composition        
  ErrorModel:
    type: object
    required:
    - message
    - code
    properties:
      message:
        type: string
      code:
        type: integer
        multipleOf: 20
        maximum: 600
        exclusiveMaximum: 600
        minimum: 100
        exclusiveMinimum: 100
  ExtendedErrorModel:
    allOf:
    - $ref: '#/definitions/ErrorModel'
    - type: object
      required:
      - rootCause
      properties:
        rootCause:
          type: string
  # Polymorphic types        
  Pet:
    type: object
    discriminator: petType
    properties:
      name:
        type: string
      petType:
        type: string
    required:
    - name
    - petType
  Cat:
    description: A representation of a cat
    allOf:
      - $ref: '#/definitions/Pet1'
      - $ref: '#/definitions/Pet2'
    type: object
    properties:
      huntingSkill:
        type: string
        description: The measured skill for hunting
        default: lazy
        enum:
        - clueless
        - lazy
        - adventurous
        - aggressive
      required:
      - huntingSkill
  Dog:
    description: A representation of a dog
    allOf:
      - $ref: '#/definitions/Pet'
      - type: object
        properties:
          packSize:
            type: integer
            format: int32
            description: the size of the pack the dog is from
            default: 0
            minimum: 0
        required:
        - packSize          
securityDefinitions:
  BasicAuth:
    type: basic
  ApiKeyAuth:
    type: apiKey
    in: header
    name: X-API-Key
  OAuth2:
    type: oauth2
    flow: accessCode
    authorizationUrl: https://example.com/oauth/authorize
    tokenUrl: https://example.com/oauth/token
    scopes:
      read: Grants read access
      write: Grants write access
      admin: Grants read and write access to administrative information
security:
  - ApiKeyAuth: []
  - OAuth2: [read, write]       
tags:
  - tag1        
  - tag2